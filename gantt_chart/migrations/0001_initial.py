# Generated by Django 4.2.1 on 2023-06-08 01:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import gantt_chart.models.mixins
import imagekit.models.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="ChartEvent",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("hierarchical_number", models.CharField(max_length=2048, verbose_name="Иерархический номер")),
                ("name", models.CharField(max_length=512, verbose_name="Название")),
                ("planned_start", models.DateField(verbose_name="Планируемая дата начала")),
                ("planned_duration", models.PositiveIntegerField(default=0, verbose_name="Планируемая длительность")),
                ("planned_end", models.DateField(verbose_name="Планируемая дата окончания")),
                ("actual_start", models.DateField(blank=True, null=True, verbose_name="Фактическая дата начала")),
                (
                    "actual_duration",
                    models.PositiveIntegerField(blank=True, null=True, verbose_name="Фактическая длительность"),
                ),
                ("actual_end", models.DateField(blank=True, null=True, verbose_name="Фактическая дата окончания")),
                (
                    "percentage_completion",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(
                                0, "Минимальный процент выполнения не может быть меньше 0"
                            ),
                            django.core.validators.MaxValueValidator(
                                100, "Максимальный процент выполнения не может быть больше 100"
                            ),
                        ],
                        verbose_name="Процент выполнения",
                    ),
                ),
                ("is_root", models.BooleanField(default=False, verbose_name="Главное")),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="gantt_chart.chartevent",
                        verbose_name="Родитель",
                    ),
                ),
            ],
            options={
                "verbose_name": "Событие графика",
                "verbose_name_plural": "События графика",
            },
            bases=(gantt_chart.models.mixins.ModelDiffMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=512, unique=True, verbose_name="Название")),
                ("description", models.TextField(blank=True, verbose_name="Описание")),
                (
                    "image",
                    imagekit.models.fields.ProcessedImageField(
                        blank=True, max_length=512, null=True, upload_to="", verbose_name="Изображение (960x240)"
                    ),
                ),
                ("is_draft", models.BooleanField(default=True, verbose_name="Черновик")),
                (
                    "project_version",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name="Версия проекта"),
                ),
            ],
            options={
                "verbose_name": "Проект",
                "verbose_name_plural": "Проекты",
            },
        ),
        migrations.CreateModel(
            name="UniversalComment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("object_id", models.CharField(max_length=64, verbose_name="Индентификатор объекта")),
                ("comment", models.TextField(db_index=True, verbose_name="Комментарий")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Дата создания")),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="author_universal_comment",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Автор комментария",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="content_universal_comment",
                        to="contenttypes.contenttype",
                        verbose_name="content type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Комментарий",
                "verbose_name_plural": "Комментарии",
            },
        ),
        migrations.CreateModel(
            name="ProjectParticipant",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("SUPERVISOR", "Руководитель"),
                            ("ADMINISTRATOR", "Администратор"),
                            ("SPECIALIST", "Специалист"),
                            ("OBSERVER", "Наблюдатель"),
                        ],
                        max_length=64,
                        verbose_name="Роль",
                    ),
                ),
                (
                    "participant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects_role",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants_role",
                        to="gantt_chart.project",
                        verbose_name="Проект",
                    ),
                ),
            ],
            options={
                "verbose_name": "Роль участника проекта",
                "verbose_name_plural": "Роли участников проекта",
            },
        ),
        migrations.CreateModel(
            name="ChartEventLink",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predecessors_links",
                        to="gantt_chart.chartevent",
                        verbose_name="Последователь",
                    ),
                ),
                (
                    "predecessor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers_links",
                        to="gantt_chart.chartevent",
                        verbose_name="Предшественник",
                    ),
                ),
            ],
            options={
                "verbose_name": "Связь между событиями графика",
                "verbose_name_plural": "Связи между событиями графика",
            },
        ),
        migrations.AddField(
            model_name="chartevent",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chart_events",
                to="gantt_chart.project",
                verbose_name="Проект",
            ),
        ),
        migrations.AddField(
            model_name="chartevent",
            name="responsible",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="event_responsible",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Ответственный",
            ),
        ),
        migrations.AddConstraint(
            model_name="projectparticipant",
            constraint=models.UniqueConstraint(
                fields=("project", "participant"), name="unique_project_participant_role"
            ),
        ),
        migrations.AddConstraint(
            model_name="charteventlink",
            constraint=models.UniqueConstraint(fields=("predecessor", "follower"), name="unique_link"),
        ),
    ]
